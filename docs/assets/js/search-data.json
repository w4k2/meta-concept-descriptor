{"0": {
    "doc": "Clustering",
    "title": "Clustering",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/clustering/",
    "relUrl": "/docs/e1/clustering/"
  },"1": {
    "doc": "Clustering",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/clustering/#synthetic",
    "relUrl": "/docs/e1/clustering/#synthetic"
  },"2": {
    "doc": "Clustering",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/clustering/#semi-synthetic",
    "relUrl": "/docs/e1/clustering/#semi-synthetic"
  },"3": {
    "doc": "Clustering",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/clustering/#real",
    "relUrl": "/docs/e1/clustering/#real"
  },"4": {
    "doc": "List of considered metafeatures",
    "title": "List of considered metafeatures",
    "content": "The description is based on the docummentation of pymfe and problexity libraries. Clustering . | Metafeature name/abbreviation | Description | . | CH | Calinski-Harabasz Index — The ratio of the sum of between-clusters dispersion and of within-cluster dispersion for all clusters, where dispersion is defined as the sum of distances squared. | . | INT | INT index - Sum of pairwise normalized interclass distances, normalized according to the number of clusters. | . | NRE | Normalized relative entropy — an indicator of uniformity distributed of instances among clusters. | . | PB | Pearson correlation between class matching and instance distances. | . | SC | Number of clusters with size smaller than a given size(default=15). | . | SIL | Mean Silhouette value — The Silhouette Coefficient is calculated using the mean intra-cluster distance and the mean nearest-cluster distance for each sample. | . | VDB | Davies-Bouldin Index — The score is defined as the average similarity measure of each cluster with its most similar cluster, where similarity is the ratio of within-cluster distances to between-cluster distances. | . | VDU | Dunn Index — The lowest intercluster distance divided by the highest intracluster distance. | . Complexity . | Metafeature name / name abbreviation | Description | . | C1 | Entropy of Class Proportions. | . | C2 | Imbalance Ratio | . | Cls_coef | Generates an epsilon-Nearest Neighbours graph. The edges are selected based on the Gower distance between samples, normalized to the range between 0 and 1. Edges between instances of distinct classes are removed. The neighborhood of each vertex is calculated – the instances directly connected to it. Then, the number of edges between the sample’s neighbors is calculated and divided by the maximum possible number of edges between them. The final measure is calculated based on the neighborhood of each point. | . | Density | Generates an epsilon-Nearest Neighbours graph as decribed in Cls_coef. The measure calculates the number of edges in the final graph divided by the total possible number of edges. | . | F1 | Maximum Fisher’s discriminant ratio. | . | F1v | Directional vector maximum Fisher’s discriminant ratio. | . | F2 | Volume of overlapping region. | . | F3 | Maximum individual feature efficiency. | . | F4 | Collective feature efficiency. | . | Hubs | Generates an epsilon-Nearest Neighbours graph as decribed in Cls_coef. The measure scores each sample by the number of connections to neighbors, weighted by the number of connections the neighbors have. | . | L1 | Sum of the error distance by linear programming. | . | L2 | Error rate of linear classifier. | . | L3 | Non linearity of linear classifier. | . | LSC | Local set average cardinality. | . | N1 | Fraction of borderline points. | . | N2 | Ratio of intra/extra class NN distance. | . | N3 | Error rate of NN classifier. | . | N4 | Nonlinearity of NN classifier. | . | T1 | Fraction of hyperspheres covering data. | . | T2 | Number of features per dimension. | . | T3 | Number of PCA dimensions per points. | . | T4 | Ration of the PCA dimension to the original dimension. | . Concept . | Metafeature name / name abbreviation | Description | . | Cohesiveness | Improved version of the weighted distance, that captures how dense or sparse is the distribution. | . | Conceptvar | Concept variation that estimates the variability of class labels among data samples. | . | Impconceptvar | Improved concept variation that estimates the variability of class labels. | . | wg_dist | Weighted distance, that captures how dense or sparse is the distribution. | . General . | Metafeature name / name abbreviation | Description | . | attr_to_inst | The ratio between the number of attributes and instances. | . | cat_to_num | Proportion of categorical and numerical attributes. | . | freq_class | Relative frequency of each distinct class. | . | inst_to_attr | Ratio of number of instances and number of predictive attributes. | . | nr_attr | Total number of attributes in the data without transformations. | . | nr_bin | Number of binary attributes. | . | nr_cat | Number of categorical attributes. | . | nr_class | Number of distinct classes. | . | nr_inst | Number of instances. | . | nr_num | Number of numerical attributes. | . | num_to_cat | Ratio of numerical and categorical features. | . Information theory . | Metafeature name / name abbreviation | Description | . | attr_conc | Concentration coefficient for each pair of distinct predictive attribute. | . | attr_ent | Shannon’s Entropy of each predictive attribute. | . | class_conc | Concentration coefficient between each attribute and class. | . | class_ent | Target attribute Shannon’s entropy. | . | eq_num_attr | Number of attributes equivalent for a predictive task. | . | joint_ent | Estimated joint entropy between each predictive attribute and the target attribute. | . | mut_inf | Mutual information between each attribute and target. | . | ns_ratio | Estimated noisiness of the predictive attributes. | . Itemset . | Metafeature name / name abbreviation | Description | . | one_itemset | The one itemset is the individual frequency of each attribute in binary format. | . | two_itemset | The two-item set meta-feature can be seen as the correlation information of each one attributes value pairs in binary format. | . Landmarking . | Metafeature name / name abbreviation | Description | . | best_node | Performance of a the best single decision tree node. Construct a single decision tree node model induced by the most informative attribute to establish the linear separability. | . | elite_nn | Performance of Elite Nearest Neighbor. Elite nearest neighbor uses the most informative attribute in the dataset to induce the 1-nearest neighbor. With the subset of informative attributes it is expected that the models should be noise tolerant. | . | linear_discr | Performance of the Linear Discriminant classifier. The Linear Discriminant Classifier is used to construct a linear split (non parallel axis) in the data to establish the linear separability. | . | naive_bayes | Performance of the Naive Bayes classifier. It assumes that the attributes are independent and each example belongs to a certain class based on the Bayes probability. | . | one_nn | Performance of the 1-Nearest Neighbor classifier. It uses the euclidean distance of the nearest neighbor to determine how noisy is the data. | . | random_node | Performance of the single decision tree node model induced by a random attribute. | . | worst_node | Performance of the single decision tree node model induced by the worst informative attribute. | . Model-based . | Metafeature name / name abbreviation | Description | . | leaves | Number of leaf nodes in the DT model. | . | leaves_branch | Size of branches in the DT model. The size of branches consists in the depth of all leaves of the DT model. | . | leaves_corrob | Leaves corroboration of the DT model. The Leaves corroboration is the proportion of examples that belong to each leaf of the DT model. | . | leaves_homo | DT model Homogeneity for every leaf node. The DT model homogeneity is calculated by the number of leaves divided by the structural shape (which is calculated by the ft_tree_shape method) of the DT model. | . | leaves_per_class | Proportion of leaves per class in DT model. This quantity is computed by the proportion of leaves of the DT model associated with each class. | . | nodes | Number of non-leaf nodes in DT model. | . | nodes_per_attr | Ratio of nodes per number of attributes in DT model. | . | nodes_per_inst | Ratio of non-leaf nodes per number of instances in DT model. | . | nodes_per_level | Ratio of number of nodes per tree level in DT model. | . | nodes_repeated | Number of repeated nodes in DT model. The number of repeated nodes is the number of repeated attributes that appear in the DT model. | . | tree_depth | Depth of every node in the DT model. | . | tree_imbalance | Tree imbalance for each leaf node. | . | tree_shape | Tree shape for every leaf node. The tree shape is the probability of arrive in each leaf given a random walk. We call this as the structural shape of the DT model. | . | var_importance | Features importance of the DT model for each attribute. It is calculated using the Gini index to estimate the amount of information used in the DT model. | . Statistical . | Metafeature name / name abbreviation | Description | . | can_cor | Canonical correlations of data. | . | cor | Correlation of distinct dataset column pairs. | . | cov | Absolute value of the covariance of distinct dataset attribute pairs. | . | eigenvalues | Eigenvalues of covariance matrix from dataset. | . | g_mean | Geometric mean of each attribute. | . | gravity | Distance between minority and majority classes center of mass. | . | h_mean | Harmonic mean of each attribute. | . | iq_range | Interquartile range (IQR) of each attribute. | . | kurtosis | Kurtosis of each attribute. | . | lh_trace | Lawley-Hotelling trace. | . | mad | Median Absolute Deviation (MAD) adjusted by a factor. | . | max | Maximum value from each attribute. | . | mean | Mean value from each attribute. | . | median | Median value from each attribute. | . | min | Minimum value from each attribute. | . | nr_cor_attr | Number of distinct highly correlated pair of attributes. | . | nr_disc | Number of canonical correlation between each attribute and class. | . | nr_norm | Number of attributes normally distributed based in a given method. | . | nr_outliers | Number of attributes with at least one outlier value. | . | p_trace | Pillai’s trace. | . | range | Range (max - min) of each attribute. | . | roy_root | Roy’s largest root. | . | sd | Standard deviation of each attribute. | . | sd_ratio | Statistical test for homogeneity of covariances. | . | skewness | Skewness for each attribute. | . | sparsity | Sparsity metric for each attribute. | . | t_mean | Trimmed mean of each attribute. | . | var | Variance of each attribute. | . | w_lambda | Wilks’ Lambda value. | . ",
    "url": "/meta-concept-descriptor/docs/ot/cm/",
    "relUrl": "/docs/ot/cm/"
  },"5": {
    "doc": "Complexity",
    "title": "Complexity",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/complexity/",
    "relUrl": "/docs/e1/complexity/"
  },"6": {
    "doc": "Complexity",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/complexity/#synthetic",
    "relUrl": "/docs/e1/complexity/#synthetic"
  },"7": {
    "doc": "Complexity",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/complexity/#semi-synthetic",
    "relUrl": "/docs/e1/complexity/#semi-synthetic"
  },"8": {
    "doc": "Complexity",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/complexity/#real",
    "relUrl": "/docs/e1/complexity/#real"
  },"9": {
    "doc": "Concept",
    "title": "Concept",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/concept/",
    "relUrl": "/docs/e1/concept/"
  },"10": {
    "doc": "Concept",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/concept/#synthetic",
    "relUrl": "/docs/e1/concept/#synthetic"
  },"11": {
    "doc": "Concept",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/concept/#semi-synthetic",
    "relUrl": "/docs/e1/concept/#semi-synthetic"
  },"12": {
    "doc": "Concept",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/concept/#real",
    "relUrl": "/docs/e1/concept/#real"
  },"13": {
    "doc": "Drift Annotation procedure",
    "title": "Drift annotation procedure",
    "content": "Real concept drifts are associated with a change (usually a decrease) in the quality of the classification achieved by the classifier. If the classifier was trained using data from a concept other than the current one, its recognition quality should decrease, as the classifier is not familiar with the current data deistribution. If an increase in quality is observed, it can be suspected that the data distribution is close to the previous concept and there are fewer samples in areas of overlap between class samples - which is also related to the change in concept. A human expert marked the locations of drifts based on the classification quality of three classifiers: Gaussian Naive Bayes (GNB) and Multilayer Perceptron (MLP) and Extreme Learning Machine (ELM) in the Test-Then-Train experimental protocol. For every chunk of data, the classifiers were first used in the inference and quality evaluation procedure, then trained using a new portion of data. Such a protocol should allow for the most accurate determination of real concept drifts at the beginning of stream processing, in particular a clear identification of the change between the first and second concept. Training the classifier with subsequent portions of data, especially in the case of MLP, which is forgetting the previous data distributions, should enable the identification of further concept changes. Partial fitting MLP by default performs only one iteration of weight optimization, so at the beginning of stream processing the recognition quality using MLP is lower and later, if the concept is stable, it increases. It should be emphasized that the processed streams were previously divided into chunks and pruned of those batches containing only single class samples. This makes the identified drift moments specific to the transformed streams used in the experiments and should not be used as unambiguous drift moments in the original streams for the purposes of other studies. Below we present the classification results using scetterplot (top row) and plot (bottom row) for the processed streams. The quality obtained by GNB is marked in blue, the MLP is marked in gold, and in red - ELM. The x-axis shows the identified moments of drift, determined based on changes in classification quality. Electricity . Covtype . Poker . Insect abrupt . Insect gradual . Insect incremental . ",
    "url": "/meta-concept-descriptor/docs/ot/da/#drift-annotation-procedure",
    "relUrl": "/docs/ot/da/#drift-annotation-procedure"
  },"14": {
    "doc": "Drift Annotation procedure",
    "title": "Drift Annotation procedure",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/ot/da/",
    "relUrl": "/docs/ot/da/"
  },"15": {
    "doc": "Experiment 1",
    "title": "Experiment 1 – Chunk metafeature similarity with drifting concepts",
    "content": "This experiment aimed to verify whether the values expressing chunk metafeatures cluster into groups that would describe a single concept. Streams were processed in batch mode. In the first experiment, the values of all analyzed metafeatures were calculated for each chunk of the generated data streams. The values from the entire stream course were examined. The expected result of the experiment was the grouping of metaattribute values in cohesive clusters depending on the current concept. In the case of streams with non-recurrent drift, metafeatures from adjacent chunks of data streams, unless a sudden drift has occurred, will lie close to each other in multidimensional space. ",
    "url": "/meta-concept-descriptor/docs/e1/e1/#experiment-1--chunk-metafeature-similarity-with-drifting-concepts",
    "relUrl": "/docs/e1/e1/#experiment-1--chunk-metafeature-similarity-with-drifting-concepts"
  },"16": {
    "doc": "Experiment 1",
    "title": "Experiment 1",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/e1/",
    "relUrl": "/docs/e1/e1/"
  },"17": {
    "doc": "Experiment 2",
    "title": "Experiment 2 – Concept classification in metafeature subgroups",
    "content": "After the first experiment, the calculated metaattribute values and concept indexes were retained for further analysis. The second experiment aimed to verify the potential of metafeatures to identify concepts objectively. The ability of five classifiers, whose implementation came from the scikit-learn \\citep{scikit-learn} library, to correctly recognize the concept was evaluated. The following classifiers were tested: GNB, KNN, SVM, DT, and MLP, each time assuming their default hyperparameterization. The quality of the classification was evaluated in a 5-times repeated stratified 2-fold cross-validation protocol. In the case of synthetic streams with sudden drift and semi-synthetic streams with the nearest drift, the problem was not characterized by a large imbalance. However, in the case of other streams, some of the concepts were short-term, significantly contributing to the class imbalance of the meta-problem. Therefore, it was decided to use the balanced accuracy metric for all cases. The experiment separately evaluated three stream categories (synthetic, semi-synthetic, and real-world). Disjoint subgroups of the calculated metafeatures were considered to determine which of them carry information valuable in the concept recognition task. In the meta-problem, each chunk of data was identified as a single pattern whose features were described by the values of metaattributes from a given group. The label of the instance was the concept identifier. Patterns were randomly shuffled before starting the experiment. ",
    "url": "/meta-concept-descriptor/docs/e2/e2/#experiment-2--concept-classification-in-metafeature-subgroups",
    "relUrl": "/docs/e2/e2/#experiment-2--concept-classification-in-metafeature-subgroups"
  },"18": {
    "doc": "Experiment 2",
    "title": "Synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e2/e2/#synthetic",
    "relUrl": "/docs/e2/e2/#synthetic"
  },"19": {
    "doc": "Experiment 2",
    "title": "Semi-synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e2/e2/#semi-synthetic",
    "relUrl": "/docs/e2/e2/#semi-synthetic"
  },"20": {
    "doc": "Experiment 2",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e2/e2/#real",
    "relUrl": "/docs/e2/e2/#real"
  },"21": {
    "doc": "Experiment 2",
    "title": "Experiment 2",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e2/e2/",
    "relUrl": "/docs/e2/e2/"
  },"22": {
    "doc": "Experiment 3",
    "title": "Experiment 3 – Attribute selection",
    "content": "The third experiment aimed to analyze the performance of single metaattributes from promising categories in a recognition task. In contrast to the second experiment, where disjoint groups of metaattributes were considered, in the third experiment, all metaattributes from categories previously considered promising were evaluated. Using the ANOVA F-test, the most informative features of each problem were selected. The considered number of metafeatures taken into account, starting with a single one and concluding with the analysis of the entire set of metafeatures. From this range, 29 values sampled from the space of a quadratic function were examined. As in a second experiment, the ability to assign a data chunk to a concept using selected metaattributes was tested. Similarly, three categories of streams were analyzed separately. For each repetition and each fold, the attributes taken into account in the classification were independently selected. The experiment was performed using a 5-times repeated 2-fold stratified cross-validation protocol. ",
    "url": "/meta-concept-descriptor/docs/e3/e3/#experiment-3--attribute-selection",
    "relUrl": "/docs/e3/e3/#experiment-3--attribute-selection"
  },"23": {
    "doc": "Experiment 3",
    "title": "Synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e3/e3/#synthetic",
    "relUrl": "/docs/e3/e3/#synthetic"
  },"24": {
    "doc": "Experiment 3",
    "title": "Semi-synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e3/e3/#semi-synthetic",
    "relUrl": "/docs/e3/e3/#semi-synthetic"
  },"25": {
    "doc": "Experiment 3",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e3/e3/#real",
    "relUrl": "/docs/e3/e3/#real"
  },"26": {
    "doc": "Experiment 3",
    "title": "Experiment 3",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e3/e3/",
    "relUrl": "/docs/e3/e3/"
  },"27": {
    "doc": "Experiment 4",
    "title": "Experiment 4 – Variance analysis and global metaatribute selection",
    "content": "The previous experiment aimed to select the most informative metaattributes for each stream, stream parameterization and replication (for synthetic and semi-synthetic), the source dataset (for semi-synthetic), and each fold. The aim of Experiment 4 is to analyze valuable metaattributes in the first place in three categories of stream origin, then the potential selection of a versatile collection of metafeatures that allow for effective identification of concepts for all streams. In this experiment, the values of the F-statistic indicator of the ANOVA test were analyzed. F-statistic informs about the degree of linear dependence of a given attribute and the target label \\citep{kim2017understanding}. As in the previous experiment, conclusions were drawn separately for three groups of streams (synthetic, semi-synthetic, and real-world). The evaluated F-statistics of the ANOVA test were determined for each type of stream and its replication. The experiment aimed to select a group of metaattributes with high concept recognition capability for all three studied stream sources. In addition, the ability to classify using selected metaattributes was tested and compared to classification using a much larger, complete set of metafeatures. ",
    "url": "/meta-concept-descriptor/docs/e4/e4/#experiment-4--variance-analysis-and-global-metaatribute-selection",
    "relUrl": "/docs/e4/e4/#experiment-4--variance-analysis-and-global-metaatribute-selection"
  },"28": {
    "doc": "Experiment 4",
    "title": "Synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e4/e4/#synthetic",
    "relUrl": "/docs/e4/e4/#synthetic"
  },"29": {
    "doc": "Experiment 4",
    "title": "Semi-synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e4/e4/#semi-synthetic",
    "relUrl": "/docs/e4/e4/#semi-synthetic"
  },"30": {
    "doc": "Experiment 4",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e4/e4/#real",
    "relUrl": "/docs/e4/e4/#real"
  },"31": {
    "doc": "Experiment 4",
    "title": "Reduction overview",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e4/e4/#reduction-overview",
    "relUrl": "/docs/e4/e4/#reduction-overview"
  },"32": {
    "doc": "Experiment 4",
    "title": "Experiment 4",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e4/e4/",
    "relUrl": "/docs/e4/e4/"
  },"33": {
    "doc": "Experiment 5",
    "title": "Experiment 5 – Covariance analysis of selected metafeatures",
    "content": "The last experiment was aimed at analyzing the covariance of selected metaattributes. The experiment was divided into two parts – the study of the covariance of the entire set describing the data stream, and the successive fragments of the stream in windows of 25 chunks. Both the covariance over the entire stream and the standard deviation of the covariance of features from successive windows were analyzed. The experiment was to determine whether it was possible to exclude some of the analyzed measures based on their correlation. Reducing the number of metaattributes taken into account could, in practical applications, reduce the computational complexity of methods determining their values for the purpose of the concept identification task, without negatively affecting the quality of recognition. In this experiment, streams from three sources will be analyzed, which will allow determining differences and similarities in metaattribute values in changing concepts. ",
    "url": "/meta-concept-descriptor/docs/e5/e5/#experiment-5--covariance-analysis-of-selected-metafeatures",
    "relUrl": "/docs/e5/e5/#experiment-5--covariance-analysis-of-selected-metafeatures"
  },"34": {
    "doc": "Experiment 5",
    "title": "Synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e5/e5/#synthetic",
    "relUrl": "/docs/e5/e5/#synthetic"
  },"35": {
    "doc": "Experiment 5",
    "title": "Semi-synthetic",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e5/e5/#semi-synthetic",
    "relUrl": "/docs/e5/e5/#semi-synthetic"
  },"36": {
    "doc": "Experiment 5",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e5/e5/#real",
    "relUrl": "/docs/e5/e5/#real"
  },"37": {
    "doc": "Experiment 5",
    "title": "Experiment 5",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e5/e5/",
    "relUrl": "/docs/e5/e5/"
  },"38": {
    "doc": "General",
    "title": "General",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/general/",
    "relUrl": "/docs/e1/general/"
  },"39": {
    "doc": "General",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/general/#synthetic",
    "relUrl": "/docs/e1/general/#synthetic"
  },"40": {
    "doc": "General",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/general/#semi-synthetic",
    "relUrl": "/docs/e1/general/#semi-synthetic"
  },"41": {
    "doc": "General",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/general/#real",
    "relUrl": "/docs/e1/general/#real"
  },"42": {
    "doc": "Home",
    "title": "On metaattribute ability of implicit concept identification",
    "content": "Concept drift in data stream processing remains an intriguing challenge and states a popular research topic. Methods that actively process data streams use drift detectors, which performance is often based on monitoring the variability of different stream properties. This publication provides an overview and analysis of metafeatures variability describing data streams with concept drifts. Five experiments conducted on synthetic, semi-synthetic, and real-world data streams examine the ability and potential of over 160 metaattributes from 9 categories to recognize concepts in non-stationary data streams. The work reveals the distinctions in the considered sources of streams and specifies 17 metafeatures with a high ability of concept identification. The presented final group of metafeatures can continue to be reduced, depending on the stream characteristics. This website contains all the figures and supplementary materials for the article “On metaattribute ability of implicit concept identification”. ",
    "url": "/meta-concept-descriptor/#on-metaattribute-ability-of-implicit-concept-identification",
    "relUrl": "/#on-metaattribute-ability-of-implicit-concept-identification"
  },"43": {
    "doc": "Home",
    "title": "Experiment 1 – Chunk metafeature similarity with drifting concepts",
    "content": "This experiment aimed to verify whether the values expressing chunk metafeatures cluster into groups that would describe a single concept. Streams were processed in batch mode. In the first experiment, the values of all analyzed metafeatures were calculated for each chunk of the generated data streams. The values from the entire stream course were examined. The expected result of the experiment was the grouping of metaattribute values in cohesive clusters depending on the current concept. In the case of streams with non-recurrent drift, metafeatures from adjacent chunks of data streams, unless a sudden drift has occurred, will lie close to each other in multidimensional space. ",
    "url": "/meta-concept-descriptor/#experiment-1--chunk-metafeature-similarity-with-drifting-concepts",
    "relUrl": "/#experiment-1--chunk-metafeature-similarity-with-drifting-concepts"
  },"44": {
    "doc": "Home",
    "title": "Experiment 2 – Concept classification in metafeature subgroups",
    "content": "After the first experiment, the calculated metaattribute values and concept indexes were retained for further analysis. The second experiment aimed to verify the potential of metafeatures to identify concepts objectively. The ability of five classifiers, whose implementation came from the scikit-learn \\citep{scikit-learn} library, to correctly recognize the concept was evaluated. The following classifiers were tested: GNB, KNN, SVM, DT, and MLP, each time assuming their default hyperparameterization. The quality of the classification was evaluated in a 5-times repeated stratified 2-fold cross-validation protocol. In the case of synthetic streams with sudden drift and semi-synthetic streams with the nearest drift, the problem was not characterized by a large imbalance. However, in the case of other streams, some of the concepts were short-term, significantly contributing to the class imbalance of the meta-problem. Therefore, it was decided to use the balanced accuracy metric for all cases. The experiment separately evaluated three stream categories (synthetic, semi-synthetic, and real-world). Disjoint subgroups of the calculated metafeatures were considered to determine which of them carry information valuable in the concept recognition task. In the meta-problem, each chunk of data was identified as a single pattern whose features were described by the values of metaattributes from a given group. The label of the instance was the concept identifier. Patterns were randomly shuffled before starting the experiment. ",
    "url": "/meta-concept-descriptor/#experiment-2--concept-classification-in-metafeature-subgroups",
    "relUrl": "/#experiment-2--concept-classification-in-metafeature-subgroups"
  },"45": {
    "doc": "Home",
    "title": "Experiment 3 – Attribute selection",
    "content": "The third experiment aimed to analyze the performance of single metaattributes from promising categories in a recognition task. In contrast to the second experiment, where disjoint groups of metaattributes were considered, in the third experiment, all metaattributes from categories previously considered promising were evaluated. Using the ANOVA F-test, the most informative features of each problem were selected. The considered number of metafeatures taken into account, starting with a single one and concluding with the analysis of the entire set of metafeatures. From this range, 29 values sampled from the space of a quadratic function were examined. As in a second experiment, the ability to assign a data chunk to a concept using selected metaattributes was tested. Similarly, three categories of streams were analyzed separately. For each repetition and each fold, the attributes taken into account in the classification were independently selected. The experiment was performed using a 5-times repeated 2-fold stratified cross-validation protocol. ",
    "url": "/meta-concept-descriptor/#experiment-3--attribute-selection",
    "relUrl": "/#experiment-3--attribute-selection"
  },"46": {
    "doc": "Home",
    "title": "Experiment 4 – Variance analysis and global metaatribute selection",
    "content": "The previous experiment aimed to select the most informative metaattributes for each stream, stream parameterization and replication (for synthetic and semi-synthetic), the source dataset (for semi-synthetic), and each fold. The aim of Experiment 4 is to analyze valuable metaattributes in the first place in three categories of stream origin, then the potential selection of a versatile collection of metafeatures that allow for effective identification of concepts for all streams. In this experiment, the values of the F-statistic indicator of the ANOVA test were analyzed. F-statistic informs about the degree of linear dependence of a given attribute and the target label \\citep{kim2017understanding}. As in the previous experiment, conclusions were drawn separately for three groups of streams (synthetic, semi-synthetic, and real-world). The evaluated F-statistics of the ANOVA test were determined for each type of stream and its replication. The experiment aimed to select a group of metaattributes with high concept recognition capability for all three studied stream sources. In addition, the ability to classify using selected metaattributes was tested and compared to classification using a much larger, complete set of metafeatures. ",
    "url": "/meta-concept-descriptor/#experiment-4--variance-analysis-and-global-metaatribute-selection",
    "relUrl": "/#experiment-4--variance-analysis-and-global-metaatribute-selection"
  },"47": {
    "doc": "Home",
    "title": "Experiment 5 – Covariance analysis of selected metafeatures",
    "content": "The last experiment was aimed at analyzing the covariance of selected metaattributes. The experiment was divided into two parts – the study of the covariance of the entire set describing the data stream, and the successive fragments of the stream in windows of 25 chunks. Both the covariance over the entire stream and the standard deviation of the covariance of features from successive windows were analyzed. The experiment was to determine whether it was possible to exclude some of the analyzed measures based on their correlation. Reducing the number of metaattributes taken into account could, in practical applications, reduce the computational complexity of methods determining their values for the purpose of the concept identification task, without negatively affecting the quality of recognition. In this experiment, streams from three sources will be analyzed, which will allow determining differences and similarities in metaattribute values in changing concepts. ",
    "url": "/meta-concept-descriptor/#experiment-5--covariance-analysis-of-selected-metafeatures",
    "relUrl": "/#experiment-5--covariance-analysis-of-selected-metafeatures"
  },"48": {
    "doc": "Home",
    "title": "Metafeatures – List of considered metafeatures",
    "content": "The description is based on the docummentation of pymfe and problexity libraries. ",
    "url": "/meta-concept-descriptor/#metafeatures--list-of-considered-metafeatures",
    "relUrl": "/#metafeatures--list-of-considered-metafeatures"
  },"49": {
    "doc": "Home",
    "title": "Drift annotation – Drift annotation procedure",
    "content": "Real concept drifts are associated with a change (usually a decrease) in the quality of the classification achieved by the classifier. If the classifier was trained using data from a concept other than the current one, its recognition quality should decrease, as the classifier is not familiar with the current data deistribution. If an increase in quality is observed, it can be suspected that the data distribution is close to the previous concept and there are fewer samples in areas of overlap between class samples - which is also related to the change in concept. ",
    "url": "/meta-concept-descriptor/#drift-annotation--drift-annotation-procedure",
    "relUrl": "/#drift-annotation--drift-annotation-procedure"
  },"50": {
    "doc": "Home",
    "title": "Metafeature selection – Selection of metafeatures for effective concept identification",
    "content": "The selection was based on output of Experiment 4 and the ranking of mean (accumulated for synthetic and semi-synthetic streams) F-statistic. The F-statistic, descibing the importance of each metafeature in the concept recognition task, was calculated for each stream. The values were accumulated for each stream type and sorted. ",
    "url": "/meta-concept-descriptor/#metafeature-selection--selection-of-metafeatures-for-effective-concept-identification",
    "relUrl": "/#metafeature-selection--selection-of-metafeatures-for-effective-concept-identification"
  },"51": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/meta-concept-descriptor/",
    "relUrl": "/"
  },"52": {
    "doc": "Information theory",
    "title": "info-theory",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/info-theory/#info-theory",
    "relUrl": "/docs/e1/info-theory/#info-theory"
  },"53": {
    "doc": "Information theory",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/info-theory/#synthetic",
    "relUrl": "/docs/e1/info-theory/#synthetic"
  },"54": {
    "doc": "Information theory",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/info-theory/#semi-synthetic",
    "relUrl": "/docs/e1/info-theory/#semi-synthetic"
  },"55": {
    "doc": "Information theory",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/info-theory/#real",
    "relUrl": "/docs/e1/info-theory/#real"
  },"56": {
    "doc": "Information theory",
    "title": "Information theory",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/info-theory/",
    "relUrl": "/docs/e1/info-theory/"
  },"57": {
    "doc": "Itemset",
    "title": "Itemset",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/itemset/",
    "relUrl": "/docs/e1/itemset/"
  },"58": {
    "doc": "Itemset",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/itemset/#synthetic",
    "relUrl": "/docs/e1/itemset/#synthetic"
  },"59": {
    "doc": "Itemset",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/itemset/#semi-synthetic",
    "relUrl": "/docs/e1/itemset/#semi-synthetic"
  },"60": {
    "doc": "Itemset",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/itemset/#real",
    "relUrl": "/docs/e1/itemset/#real"
  },"61": {
    "doc": "Landmarking",
    "title": "Landmarking",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/landmarking/",
    "relUrl": "/docs/e1/landmarking/"
  },"62": {
    "doc": "Landmarking",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/landmarking/#synthetic",
    "relUrl": "/docs/e1/landmarking/#synthetic"
  },"63": {
    "doc": "Landmarking",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/landmarking/#semi-synthetic",
    "relUrl": "/docs/e1/landmarking/#semi-synthetic"
  },"64": {
    "doc": "Landmarking",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/landmarking/#real",
    "relUrl": "/docs/e1/landmarking/#real"
  },"65": {
    "doc": "Model-based",
    "title": "Model-based",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/model-based/",
    "relUrl": "/docs/e1/model-based/"
  },"66": {
    "doc": "Model-based",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/model-based/#synthetic",
    "relUrl": "/docs/e1/model-based/#synthetic"
  },"67": {
    "doc": "Model-based",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/model-based/#semi-synthetic",
    "relUrl": "/docs/e1/model-based/#semi-synthetic"
  },"68": {
    "doc": "Model-based",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/model-based/#real",
    "relUrl": "/docs/e1/model-based/#real"
  },"69": {
    "doc": "Metafeature selection",
    "title": "Selection of metafeatures for effective concept identification",
    "content": "The selection was based on output of Experiment 4 and the ranking of mean (accumulated for synthetic and semi-synthetic streams) F-statistic. The F-statistic, descibing the importance of each metafeature in the concept recognition task, was calculated for each stream. The values were accumulated for each stream type and sorted. The ranks, defined as the order of sorted, accumulated F-statistics values, had the most significant impact on the selection of metafeatures. Moreover, the diversity of the groups from which the metafeatures were selected was taken into account, trying to avoid combinations that strongly correlated with each other (e.g. C1 and C2 from complexity category, which both express imbalance ratio). The largest pool of metafeatures was determined based on rankings for real-world streams, assuming that they best represent real applications of stream processing methods. | Metafeature | Rank in synthetic | Rank in semi-synthetic | Rank in real-world | . | int | — | — | 4 | . | nre | — | — | 5 | . | c1 | — | — | 7 | . | f1.mean | 5 | — | 10 | . | cl_c.mean | — | — | 3 | . | cl_c.sd | — | — | 8 | . | cl_ent | — | — | 6 | . | j_ent.mean | — | — | 2 | . | j_ent.sd | — | — | 1 | . | mi.mean | — | — | 13 | . | mi.sd | — | — | 9 | . | wn.mean | — | — | 16 | . | g_m.mean | — | — | 15 | . | mean.mean | 1 | 1 | 12 | . | mean.sd | 4 | — | — | . | med.mean | 3 | 3 | — | . | t_m.mean | 2 | 2 | — | . ",
    "url": "/meta-concept-descriptor/docs/ot/sm/#selection-of-metafeatures-for-effective-concept-identification",
    "relUrl": "/docs/ot/sm/#selection-of-metafeatures-for-effective-concept-identification"
  },"70": {
    "doc": "Metafeature selection",
    "title": "Metafeature selection",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/ot/sm/",
    "relUrl": "/docs/ot/sm/"
  },"71": {
    "doc": "Statistical",
    "title": "Statistical",
    "content": " ",
    "url": "/meta-concept-descriptor/docs/e1/statistical/",
    "relUrl": "/docs/e1/statistical/"
  },"72": {
    "doc": "Statistical",
    "title": "Synthetic",
    "content": "Gradual . Incremental . Sudden . ",
    "url": "/meta-concept-descriptor/docs/e1/statistical/#synthetic",
    "relUrl": "/docs/e1/statistical/#synthetic"
  },"73": {
    "doc": "Statistical",
    "title": "Semi-synthetic",
    "content": "Cubic . Nearest . ",
    "url": "/meta-concept-descriptor/docs/e1/statistical/#semi-synthetic",
    "relUrl": "/docs/e1/statistical/#semi-synthetic"
  },"74": {
    "doc": "Statistical",
    "title": "Real",
    "content": ". ",
    "url": "/meta-concept-descriptor/docs/e1/statistical/#real",
    "relUrl": "/docs/e1/statistical/#real"
  }
}
